/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define L1 1
#define L2 2
#define L3 3

/ {
  keymap {
    compatible = "zmk,keymap";
    default_layer {
    // -----------------------------------------------------------------------------------------
    // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
    // |CTL/TB|  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | CTL/'|
    // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
    //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |
    bindings = <
      &kp TAB        &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp MINUS
      &mt LCTRL ESC  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
      &mt LSHFT LBRC &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHIFT RBRC
      &mt LALT LBKT  &mt LGUI LPAR &lt L1 SPACE      &lt L2 RET &mt RGUI RPAR &kp RALT RBKT
    >;
  };

  lower_layer {
    // -----------------------------------------------------------------------------------------
    // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
    // |      | F1  | F2  | F3  | F4  | F5  |   | LFT | DWN |  UP | RGT |     |      |
    // | SHFT | F6  | F7  | F8  | F9  | F10 |   |     |     |     |     |     |      |
    //                    | GUI | LWR | ENT |   | SPC | RSE | ALT |
    bindings = <
      &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6   &kp N7    &kp N8    &kp N9  &kp N0   &kp EQUAL
      &kp DEL   &trans &trans &trans &trans &trans   &kp HOME &kp PG_DN &kp PG_UP &kp END &kp BSLH &kp BSPC
      &trans    &trans &trans &trans &trans &trans   &trans   &trans    &trans    &trans  &trans   &trans
                              &trans &trans &trans   &to L3   &trans    &trans
      >;
    };

  raise_layer {
    // -----------------------------------------------------------------------------------------
    // |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
    // |      |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |  `   |
    // | SHFT |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   |
    //                    | GUI | ADJ | ENT |   | SPC | ADJ | ALT |
    bindings = <
      &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR &kp PLUS
      &kp DEL   &trans   &trans &trans   &trans   &trans      &kp LEFT  &kp DOWN &kp UP &kp RIGHT  &kp PIPE &kp BSPC
      &trans    &trans   &trans &trans   &trans   &trans      &trans &trans &trans &trans &trans &trans
                                &trans   &trans   &to L3      &trans &trans &trans
      >;
    };

  adjust_layer {
    // -----------------------------------------------------------------------------------------
    // | MUTE |VOLDN|VOLUP| PREV| NEXT| PLAY|   | BT1 | BT2 | BT3 | BT4 | BT5 | BTCLR|
    // | CAPS |     |     |     |     |     |   |     |     |     |     |     |      |
    // |      |     |     |     | BRID| BRIU|   |     |     |     |     |     |      |
    //                    | GUI |     | ENT |   | SPC |     | ALT |
    bindings = <
      &trans &trans     &trans       &trans        &trans &trans        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
      &trans &trans     &trans       &trans        &trans &trans        &trans       &trans       &trans       &trans       &trans       &trans
      &trans &kp K_MUTE &kp K_VOL_DN &kp K_VOL_UP  &trans &trans        &trans       &kp C_PP     &kp C_PREV   &kp C_NEXT   &trans       &trans
                                     &trans        &trans &trans        &trans       &trans       &trans
      >;
    };
  };
};

// vi: ft=c
