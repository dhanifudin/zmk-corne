/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "mouse.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LOW 1
#define RSE 2
#define ADJ 3
#define MOU 4


#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <0>; \
  };

/ {
  combos {
    compatible = "zmk,combos";
    COMBO(capsword, &caps_word, 16 19)
  };
  keymap {
    compatible = "zmk,keymap";

    default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// |CTL/TB|  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | CTL/'|
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |
      bindings = <
        &kp TAB        &kp Q &kp W &kp E &kp R &kp T  &kp Y &kp U  &kp I     &kp O   &kp P    &kp MINUS
        &mt LCTRL ESC  &kp A &kp S &kp D &kp F &kp G  &kp H &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
        &mt LSHFT LBRC &kp Z &kp X &kp C &kp V &kp B  &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHFT RBRC
        &mt LALT LBKT  &lt LOW SPACE &mt LGUI LPAR    &mt RGUI RPAR &lt RSE RET &mt RALT RBKT
      >;
    };

    lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// |      | F1  | F2  | F3  | F4  | F5  |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT | F6  | F7  | F8  | F9  | F10 |   |     |     |     |     |     |      |
//                    | GUI | LWR | ENT |   | SPC | RSE | ALT |
      bindings = <
        &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4  &kp N5   &kp N6   &kp N7   &kp N8 &kp N9  &kp N0   &kp EQUAL
        &kp DEL   &trans &trans &trans &trans  &trans   &kp HOME &kp PG_DN &kp PG_UP &kp END &kp BSLH &kp BSPC
        &mo MOU   &trans &trans &trans &trans  &trans   &trans   &trans   &trans &trans  &trans   &trans
                                &trans &trans  &mo ADJ  &trans   &mo ADJ  &trans
      >;
    };

    raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |      |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "" |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   |
//                    | GUI | ADJ | ENT |   | SPC | ADJ | ALT |
      bindings = <
        &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR &kp PLUS
        &kp DEL   &trans   &trans &trans   &trans   &trans      &kp LEFT  &kp DOWN &kp UP   &kp RIGHT &kp PIPE &kp BSPC
        &trans    &trans   &trans &trans   &trans   &trans      &trans    &trans   &trans   &trans    &trans   &trans
                    	            &trans   &mo ADJ  &trans      &mo ADJ   &trans   &trans
      >;
    };

    adjust_layer {
// -----------------------------------------------------------------------------------------
// | MUTE |VOLDN|VOLUP| PREV| NEXT| PLAY|   | BT1 | BT2 | BT3 | BT4 | BT5 | BTCLR|
// | CAPS |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     | BRID| BRIU|   |     |     |     |     |     |      |
//                    | GUI |     | ENT |   | SPC |     | ALT |
      bindings = <
        &kp F11 &kp F1     &kp F2       &kp F3       &kp F4 &kp F5      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
        &kp F12 &kp F6     &kp F7       &kp F8       &kp F9 &kp F10     &trans       &trans   &trans     &trans     &trans &trans
        &trans  &kp K_MUTE &kp K_VOL_DN &kp K_VOL_UP &trans &bootloader &bootloader  &kp K_PP &kp K_PREV &kp K_NEXT &trans &trans
                                        &trans       &trans &trans      &trans       &trans   &trans
      >;
    };

    mouse_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |        |        |      |         |     |    |
// |      |     |     |     |     |     |   | M LEFT | M DOWN | M UP | M RIGHT |     |    |
// |      |     |     |     |     |     |   | S LEFT | S DOWN | S UP | S RIGHT |     |    |
//                    |     |     |     |   | LCLK   | MCLK   | RCLK |
      bindings = <
        &trans &trans &trans &trans &trans &trans   &trans         &trans         &trans       &trans          &trans   &trans
        &trans &trans &trans &trans &trans &trans   &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &mkp MB4 &mkp MB5
        &trans &trans &trans &trans &trans &trans   &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_UP &msc SCRL_RIGHT &trans   &trans
                             &trans &trans &trans   &mkp LCLK      &mkp MCLK      &mkp RCLK
      >;
    };
  };
};

// vi: ft=c
